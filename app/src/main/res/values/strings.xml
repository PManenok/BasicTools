<resources>
    <string name="app_name">BaseTools</string>
    <string name="search_hint">Search by case name or modules</string>
    <string name="list_is_empty">List is empty</string>
    <string name="add_something">Add something</string>
    <string name="action">Action</string>
    <string name="click">Click</string>
    <string name="title">Title</string>
    <string name="info">Info</string>
    <string name="create">Create</string>
    <string name="create_default">Create default</string>
    <string name="value">Value</string>
    <string name="value_text">Value text</string>
    <string name="size">Size</string>
    <string name="image">Image</string>
    <string name="top">Top</string>
    <string name="bottom">Bottom</string>
    <string name="left">Left</string>
    <string name="right">Right</string>
    <string name="width">Width</string>
    <string name="color">Color</string>
    <string name="test_text">Test text</string>
    <string name="set_error">Set error</string>
    <string name="error_text">Error text!</string>
    <string name="reset_error">Reset error</string>
    <string name="set">Set</string>
    <string name="reset">Reset</string>
    <string name="change_style">Change style</string>

    <!--Numpad-->
    <string name="numpad_common_text">Enter something using numpad</string>
    <string name="numpad_common_text_test">Numpad test</string>
    <string name="numpad_change_icons_image">Change numpad icons</string>
    <string name="numpad_change_icons_size">Change icons size</string>

    <!--Util module-->
    <string name="util_title_case_1">Case 1. When you open this screen, the keyboard are immediately shown and EditText view below has focus. Use button on the right side to defocus view and hide keyboard</string>
    <string name="util_title_case_2">Case 2. Use Show button to show keybord, but EditText view on the center will not have focus. Use Hide button to hide keyboard. If EditText view will have focus and you will use Hide button, keyboard will be hidden, but EditText will have focus</string>

    <string name="utils_title_case_1">Case 1: Add number in EditText view below, and format number to formated input using Format button</string>
    <string name="utils_title_case_2">Case 2: Add number in EditText view below, and format it to formated string using Format button</string>
    <string name="utils_title_case_3">Case 3: Add something in EditText view below, and get only numbers from string you added using Get numbers button</string>
    <string name="utils_title_case_4">Case 4: Luhn algorithm check. This only works if you are certain all input will be at least 10 characters</string>
    <string name="utils_title_case_5">Case 5: Add card number and get card type using Card type button</string>
    <string name="utils_format">Format</string>
    <string name="utils_get_numbers">Get numbers</string>
    <string name="utils_check">Check</string>
    <string name="utils_card_type">Card type</string>
    <string name="utils_add_number">Add number</string>
    <string name="utils_add_something">Add something</string>
    <string name="utils_add_card_type">Add card type</string>
    <string name="utils_result">Result: </string>

    <string name="util_manager_title">Switch manager from the Util module is created for handling enabling and disabling views. With the first custom switcher you can enable/disable views using the basic SwitchManager from the module, with the second one you can do the same but with the overridden SwitchManager.</string>
    <string name="util_manager_base_title">Custom switcher for base SwitchManager</string>
    <string name="util_manager_base_info">Base SwitchManager can enable/disable view if it implements ISwitchView interface or if it is an EditText</string>
    <string name="util_manager_custom_title">Custom switcher for overriding SwitchManager</string>
    <string name="util_manager_custom_info">Custom SwitchManager overriding base SwitchManager and also can enable/disable view if it is a Button ot SwitchMaterial</string>
    <string name="util_manager_test_hint">Test text</string>
    <string name="util_manager_test_hint_switcher">Test title</string>

    <!--Custom switch-->
    <string name="custom_switch_check_instruction">Before become isChecked switcher checks for a non-empty field below. Enter something in the input field and turn on the switcher</string>
    <string name="custom_switch_add_title_hint">Add switcher title</string>
    <string name="custom_switch_add_info_hint">Add switcher info</string>
    <string name="custom_switch_change_style">Change switcher style</string>
    <string name="custom_switch_disable_instruction">Use this switcher for enabling and disabling views on the screen. Switcher is on - enable views, off - disable</string>
    <string name="custom_switch_disable_title">Enable/disable switcher</string>
    <string name="util_manager_click">Click</string>
    <string name="custom_switch_choose_title_style">Choose title style</string>
    <string name="custom_switch_choose_info_style">Choose info style</string>
    <string name="custom_switch_choose_thumb_color">Choose thumb color</string>
    <string name="custom_switch_choose_track_color">Choose track color</string>
    <string name="custom_switch_program_case">Create your own CustomSwitcher. Use functional below to add characteristics and style to your view.</string>
    <string name="custom_switch_container_hint">Here will be your CustomSwitch</string>
    <string name="custom_switch_status_on">Switcher is on</string>
    <string name="custom_switch_status_off">Switcher is off</string>
    <string name="custom_switcher">Switcher</string>

    <string name="style_1">Style 1</string>
    <string name="style_2">Style 2</string>
    <string name="style_3">Style 3</string>

    <string name="alignment_left">Left</string>
    <string name="alignment_center">Center</string>
    <string name="alignment_right">Right</string>

    <string-array name="title_styles">
        <item>@string/style_1</item>
        <item>@string/style_2</item>
        <item>@string/style_3</item>
    </string-array>

    <string-array name="switcher_info_alignment">
        <item>@string/alignment_left</item>
        <item>@string/alignment_center</item>
        <item>@string/alignment_right</item>
    </string-array>

    <!--Listheader-->
    <string name="listheader_switcher">Enable/disable views</string>
    <string name="listheader_switcher_info">Use this switcher to enable/disable views on the screen</string>
    <string name="listheader_case_1">Case 1: Listheader view with title, icon on the right and ListOpenedListener. Click on container to open/close list below</string>
    <string name="listheader_case_2">Case 2: Listheader view without title, icon on the right is clickable</string>
    <string name="listheader_case_3">Case 3: Listheader view with title, clickable action text on the right and clickable container</string>
    <string name="listheader_title">List title</string>
    <string name="listheader_test_text">Test text</string>
    <string name="listheader_click">click</string>
    <string name="listheader_icon_click">Icon click</string>
    <string name="listheader_action_click">Action click</string>


    <!--Topbar-->
    <string name="topbar_title">Title</string>
    <string name="topbar_title_long">Looooooooooooooooooong  title</string>
    <string name="topbar_action_start">start</string>
    <string name="topbar_action_cancel">cancel</string>
    <string name="topbar_change_style">Change style</string>
    <string name="topbar_change_icons">Change icons</string>
    <string name="topbar_case_1">Case 1. Topbar without any icons, but with divider</string>
    <string name="topbar_case_2">Case 2. Topbar with navigation icon</string>
    <string name="topbar_case_3">Case 3. Topbar with navigation icon and actionView on the right, with handler for handling clicks</string>
    <string name="topbar_case_4">Case 4. Topbar with action icon on the right</string>
    <string name="topbar_case_5">Case 5. Topbar with actionView on the left</string>
    <string name="topbar_case_6">Case 6. Topbar with actionView on the left and actionIcon on the right. Use button below to change title, actionView and action icon, with handler for handling clicks</string>
    <string name="topbar_case_7">Case 7. Topbar with actionViews. Use button below to change style of topbar</string>
    <string name="topbar_case_8">Case 8. Topbar with actionView on the right</string>
    <string name="topbar_case_9">Case 9. Topbar with two icons and two actionViews, but icons are not visible cause actionViews are in priority, with handler for handling clicks</string>
    <string name="topbar_case_10">Case 10. Topbar with two icons, with handler for handling clicks</string>
    <string name="topbar_nav_click">onNavigationClick</string>
    <string name="topbar_action_click">onActionClick</string>

    <!--Cardline-->
    <string name="cardline_case_1">Case 1. Card with icons, cardValueAlignment inherit, two dividers, all paddings and default title width percent</string>
    <string name="cardline_case_2">Case 2. Card with end icon, cardValueAlignment center, two dividers, text style and title width percent 0.1</string>
    <string name="cardline_case_3">Case 3. Card value without title, icons, top divider and with long text, cardValueAlignment textEnd</string>
    <string name="cardline_case_4">Case 4. Just title with long text, no dividers</string>
    <string name="cardline_case_5">Case 5. Card value with fixed height, dividers and all parts have different vertical bias. You can use button below to change cardline style</string>
    <string name="cardline_title">title</string>
    <string name="cardline_title_long">loooooooooooooooooooooooong title</string>
    <string name="cardline_value">Card with text</string>
    <string name="cardline_value_long">Card with loooooooooooooooooooooooooooooooooong text</string>
    <string name="cardline_change_style">Change cardline style</string>

    <string name="cardline_dynamic_case">Create your own Cardline. Use functional below to add characteristics and style to your view.</string>
    <string name="cardline_dynamic_container">Here will be your Cardline</string>
    <string name="cardline_dynamic_choose_for_title">Choose for title:</string>
    <string name="cardline_dynamic_is_single_line">Is single line</string>
    <string name="cardline_dynamic_add_width_percent">Add width percent from 0 till 1</string>
    <string name="cardline_dynamic_choose_for_value_text">Choose for value text:</string>
    <string name="cardline_dynamic_add_vertical_bias">Add vertical bias for title and value text:</string>
    <string name="cardline_dynamic_add_top_divider">Add top divider</string>
    <string name="cardline_dynamic_add_bottom_divider">Add bottom divider</string>
    <string name="cardline_dynamic_add_paddings_for_container">Add paddings for Cardline container</string>
    <string name="cardline_dynamic_add_start_icon">Add start icon</string>
    <string name="cardline_dynamic_add_paddings_for_start_icon">Add paddings for start icon</string>
    <string name="cardline_dynamic_vertical_bias">Vertical bias</string>
    <string name="cardline_dynamic_add_end_icon">Add end icon</string>
    <string name="cardline_dynamic_add_paddings_for_end_icon">Add paddings for end icon</string>


    <!--PinView-->
    <string name="pinView_case_1">Case 1: Pin view with a base style. Use button below to add/restore pin items or clear all added pins.</string>
    <string name="pinView_case_2">Case 2: Pin view with a custom style. Use button below to add/restore pin items or clear all added pins.</string>
    <string name="pinView_add_pin">Add pin</string>
    <string name="pinView_restore_pin">Restore pin</string>
    <string name="pinView_clear_all">Clear all</string>
    <string name="hint_add_value">Add value</string>
    <string name="custom_switch_choose_alignment">Choose alignment for info text</string>
    <string name="custom_switch_add_padding">Add padding to switcher and information text</string>

    <!--InputfieldView start icon-->
    <string name="inputfieldview_title">On this screen you can check functional of InputfieldView and see different styles of views.</string>
    <string name="inputfieldview_case_1">Case 1: Base InputFieldView</string>
    <string name="inputfieldview_case_2">Case 2: Custom InputFieldView with two icons, label, help text. When you set error box stroke, label and start icon will have error color</string>
    <string name="inputfieldview_case_3">Case 3: Custom InputFieldView with styled box, start icon mode checkable and end icon mode custom. When you set error only box stroke will have error color</string>
    <string name="inputfieldview_case_4">Case 4: InputFieldView with start icon mode progress and end icon mode text. When you set error box stroke and end text will have error color</string>
    <string name="inputfieldview_case_5">Case 5: InputFieldView with icons. Error color will be the same for each parts of view but icons will have default color.</string>
    <string name="inputfieldview_case_6">Case 6: InputFieldView without icons. When you set error only box stroke will have own error color</string>
    <string name="inputfieldview_set_reset_error_title">Click this buttons to set/reset errors to all inputField views</string>
    <string name="inputfieldview_new_label">New label</string>

    <!--InputfieldView end icon-->
    <string name="inputfieldview_end_title">On this screen you can check functional of InputfieldView end icon.</string>
    <string name="inputfieldview_end_case_1">Case 1. InputfieldView without end icon</string>
    <string name="inputfieldview_end_case_2">Case 2. InputfieldView with end icon in Clear text mode</string>
    <string name="inputfieldview_end_case_3">Case 3. InputfieldView with end icon in Password toggle mode</string>
    <string name="inputfieldview_end_case_4">Case 4. InputfieldView with end icon in Custom mode</string>
    <string name="inputfieldview_end_case_5">Case 5. InputfieldView with end icon in Text mode</string>
    <string name="inputfieldview_end_case_6">Case 6. InputfieldView with end icon in Checkable mode</string>
    <string name="inputfieldview_end_case_7">Case 7. InputfieldView with end icon in Error mode</string>
    <string name="inputfieldview_end_icon_click">End icon click</string>
    <string name="inputfieldview_end_icon_is_checked">Is checked</string>
    <string name="inputfieldview_end_icon_is_unchecked">Is unchecked</string>
    <string name="inputfieldview_end_set_reset_errors_title">Use buttons to set and reset errors for all Inputfield views</string>
    <string name="inputfieldview_end_change_style">Use this button to change end icons styles for all Inputfield views</string>

    <!--InputfieldView start icon-->
    <string name="inputfieldview_start_title">On this screen you can check functional of InputfieldView start icon.</string>
    <string name="inputfieldview_start_case_1">Case 1. InputfieldView without start icon</string>
    <string name="inputfieldview_start_case_2">Case 2. InputfieldView with start icon in Checkable mode</string>
    <string name="inputfieldview_start_case_3">Case 3. InputfieldView with start icon in Custom mode</string>
    <string name="inputfieldview_start_case_4">Case 4. InputfieldView with start icon in Default mode</string>
    <string name="inputfieldview_start_case_5">Case 5. InputfieldView with start icon in Progress mode</string>
    <string name="inputfieldview_start_icon_click">Start icon click</string>
    <string name="inputfieldview_start_icon_is_checked">Is checked</string>
    <string name="inputfieldview_start_icon_is_unchecked">Is unchecked</string>
    <string name="inputfieldview_start_set_reset_errors_title">Use buttons to set and reset errors for all Inputfield views</string>
    <string name="inputfieldview_start_change_style">Use this button to change start icons styles for all Inputfield views</string>

</resources>
